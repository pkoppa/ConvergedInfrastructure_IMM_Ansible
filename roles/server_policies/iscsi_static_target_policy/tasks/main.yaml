---
- name: "Configure iSCSI Static Target Policies"
  vars:
    api_info: &api_info
      api_private_key: "{{ api_private_key }}"
      api_key_id: "{{ api_key_id }}"
      api_uri: "{{ api_uri | default(omit) }}"
      validate_certs: "{{ validate_certs | default(omit) }}"
      state: "{{ state | default(omit) }}"

  block:
  -   name: "Configure iSCSI-A Primary Target Policy"
      cisco.intersight.intersight_rest_api:
            <<: *api_info
            resource_path: /vnic/IscsiStaticTargetPolicies
            query_params:
               $filter: "Name eq '{{ name_of_iscsi_a_primary_target_policy }}'"
            api_body: {
              "Name": "{{ name_of_iscsi_a_primary_target_policy }}",
              "Description": "{{ description_of_iscsi_a_primary_target_policy }}",

              "Organization": {
                 "Moid": "{{ intersight_org.api_response.Moid }}"
               },

              "TargetName": "{{ target_iqn_of_iscsi_a_primary }}",
              "IpAddress": "{{ target_ip_of_iscsi_a_primary  }}",
              "Port": "{{ iscsi_port_of_iscsi_a_primary }}",
              "Lun": {
                  "LunId": "{{ lun_id_of_iscsi_a_primary }}"
                }
             }
      register: iscsi_a_primary_target


  -   name: "Configure iSCSI-A Secondary Target Policy"
      cisco.intersight.intersight_rest_api:
            <<: *api_info
            resource_path: /vnic/IscsiStaticTargetPolicies
            query_params:
               $filter: "Name eq '{{ name_of_iscsi_a_secondary_target_policy }}'"
            api_body: {
              "Name": "{{ name_of_iscsi_a_secondary_target_policy }}",
              "Description": "{{ description_of_iscsi_a_secondary_target_policy }}",

              "Organization": {
                 "Moid": "{{ intersight_org.api_response.Moid }}"
               },

              "TargetName": "{{ target_iqn_of_iscsi_a_secondary }}",
              "IpAddress": "{{ target_ip_of_iscsi_a_secondary  }}",
              "Port": "{{ iscsi_port_of_iscsi_a_secondary }}",
              "Lun": {
                  "LunId": "{{ lun_id_of_iscsi_a_secondary }}"
                }
             }
      register: iscsi_a_secondary_target


  -   name: "Configure iSCSI-B Primary Target Policy"
      cisco.intersight.intersight_rest_api:
            <<: *api_info
            resource_path: /vnic/IscsiStaticTargetPolicies
            query_params:
               $filter: "Name eq '{{ name_of_iscsi_b_primary_target_policy }}'"
            api_body: {
              "Name": "{{ name_of_iscsi_b_primary_target_policy }}",
              "Description": "{{ description_of_iscsi_b_primary_target_policy }}",

              "Organization": {
                 "Moid": "{{ intersight_org.api_response.Moid }}"
               },

              "TargetName": "{{ target_iqn_of_iscsi_b_primary }}",
              "IpAddress": "{{ target_ip_of_iscsi_b_primary  }}",
              "Port": "{{ iscsi_port_of_iscsi_b_primary }}",
              "Lun": {
                  "LunId": "{{ lun_id_of_iscsi_b_primary }}"
                }
             }
      register: iscsi_b_primary_target


  -   name: "Configure iSCSI-B Secondary Target Policy"
      cisco.intersight.intersight_rest_api:
            <<: *api_info
            resource_path: /vnic/IscsiStaticTargetPolicies
            query_params:
               $filter: "Name eq '{{ name_of_iscsi_b_secondary_target_policy }}'"
            api_body: {
              "Name": "{{ name_of_iscsi_b_secondary_target_policy }}",
              "Description": "{{ description_of_iscsi_b_secondary_target_policy }}",

              "Organization": {
                 "Moid": "{{ intersight_org.api_response.Moid }}"
               },

              "TargetName": "{{ target_iqn_of_iscsi_b_secondary }}",
              "IpAddress": "{{ target_ip_of_iscsi_b_secondary  }}",
              "Port": "{{ iscsi_port_of_iscsi_b_secondary }}",
              "Lun": {
                  "LunId": "{{ lun_id_of_iscsi_b_secondary }}"
                }
             }
      register: iscsi_b_secondary_target
      
  when: boot_option == "iSCSI"
